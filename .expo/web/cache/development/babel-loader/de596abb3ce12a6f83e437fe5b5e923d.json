{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as type from \"../actions/types\";\nvar INITIAL_STATE = {\n  bookingLoading: false,\n  successfullyCreatedID: 0,\n  tempBookingID: 0,\n  bookings: [],\n  bookingValidation: false,\n  delivery: undefined,\n  cart: [],\n  info: {\n    step: 1\n  }\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case type.CREATE_PAYMENT_INTENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        createPaymentIntentFailed: true,\n        loadingStripeClientSecret: false\n      });\n\n    case type.CREATE_PAYMENT_INTENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loadingStripeClientSecret: true\n      });\n\n    case type.CREATE_PAYMENT_INTENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        stripeTravelClientSecret: action.travelClientSecret,\n        stripeServiceClientSecret: action.serviceClientSecret,\n        loadingStripeClientSecret: false\n      });\n\n    case type.BOOKING_INFORMATION_RECORDED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        info: action.info\n      });\n\n    case type.CREATE_BOOKING_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        bookingLoading: true\n      });\n\n    case type.CREATE_BOOKING_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        bookingCreationFailedMsg: action.errorMsg,\n        bookingLoading: false,\n        successfullyCreatedID: -1,\n        tempBookingID: -1\n      });\n\n    case type.CREATE_BOOKING_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        bookingLoading: false,\n        successfullyCreatedID: action.bookingID,\n        tempBookingID: 0\n      });\n\n    case type.CLEAN_TEMP_BOOKING_ID:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tempBookingID: 0\n      });\n\n    case type.VALIDATE_BOOKING_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        bookingValidation: 'validating',\n        bookingValidationError: undefined,\n        delivery: undefined\n      });\n\n    case type.VALIDATE_BOOKING_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        delivery: action.delivery,\n        bookingValidation: 'success'\n      });\n\n    case type.VALIDATE_BOOKING_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        bookingValidation: 'error',\n        bookingValidationError: action.error\n      });\n\n    case type.VALIDATE_POSTCODE_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        postcodeSuccess: true\n      });\n\n    case type.VALIDATE_POSTCODE_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        postcodeSuccess: false\n      });\n\n    case type.VALIDATE_POSTCODE_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        postcodeSuccess: false\n      });\n\n    case type.GET_BOOKINGS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        bookings: action.payload.bookings\n      });\n\n    case type.SET_CART_TYPE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cartType: action.cartType\n      });\n\n    case type.ADD_CART_ITEM:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cart: state.cart.concat(action.data)\n      });\n\n    case type.REMOVE_CART_ITEM:\n      var removed = [].concat(_toConsumableArray(state.cart.slice(0, action.index)), _toConsumableArray(state.cart.slice(action.index + 1)));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cart: removed\n      });\n\n    case type.DELETE_BOOKING_INFO:\n      return _objectSpread({}, INITIAL_STATE);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/egecetindag/Desktop/Projects/esclot-mobile/reducers/BookingReducer.js"],"names":["type","INITIAL_STATE","bookingLoading","successfullyCreatedID","tempBookingID","bookings","bookingValidation","delivery","undefined","cart","info","step","state","action","CREATE_PAYMENT_INTENT_FAILURE","createPaymentIntentFailed","loadingStripeClientSecret","CREATE_PAYMENT_INTENT_REQUEST","CREATE_PAYMENT_INTENT_SUCCESS","stripeTravelClientSecret","travelClientSecret","stripeServiceClientSecret","serviceClientSecret","BOOKING_INFORMATION_RECORDED","CREATE_BOOKING_REQUEST","CREATE_BOOKING_FAILURE","bookingCreationFailedMsg","errorMsg","CREATE_BOOKING_SUCCESS","bookingID","CLEAN_TEMP_BOOKING_ID","VALIDATE_BOOKING_REQUEST","bookingValidationError","VALIDATE_BOOKING_SUCCESS","VALIDATE_BOOKING_FAILURE","error","VALIDATE_POSTCODE_SUCCESS","postcodeSuccess","VALIDATE_POSTCODE_REQUEST","VALIDATE_POSTCODE_FAILURE","GET_BOOKINGS_SUCCESS","payload","SET_CART_TYPE","cartType","ADD_CART_ITEM","concat","data","REMOVE_CART_ITEM","removed","slice","index","DELETE_BOOKING_INFO"],"mappings":"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","sourcesContent":["import * as type from '../actions/types';\n\nconst INITIAL_STATE = {\n  bookingLoading: false,\n  successfullyCreatedID: 0,\n  tempBookingID: 0,\n  bookings: [],\n  bookingValidation: false,\n  delivery: undefined,\n  cart: [],\n  info: { step: 1 },\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    //// Create payment intent\n    case type.CREATE_PAYMENT_INTENT_FAILURE:\n      return {\n        ...state,\n        createPaymentIntentFailed: true,\n        loadingStripeClientSecret: false,\n      }\n    case type.CREATE_PAYMENT_INTENT_REQUEST:\n      return {\n        ...state,\n        loadingStripeClientSecret: true,\n      }\n    case type.CREATE_PAYMENT_INTENT_SUCCESS:\n      return {\n        ...state,\n        stripeTravelClientSecret: action.travelClientSecret,\n        stripeServiceClientSecret: action.serviceClientSecret,\n        loadingStripeClientSecret: false,\n      }\n    case type.BOOKING_INFORMATION_RECORDED:\n      return {\n        ...state,\n        info: action.info\n      }\n    //// Create booking\n    case type.CREATE_BOOKING_REQUEST:\n      return {\n        ...state,\n        bookingLoading: true\n\n      }\n    case type.CREATE_BOOKING_FAILURE:\n      return {\n        ...state,\n        bookingCreationFailedMsg: action.errorMsg,\n        bookingLoading: false,\n        successfullyCreatedID: -1,\n        tempBookingID: -1\n      }\n    case type.CREATE_BOOKING_SUCCESS:\n      return {\n        ...state,\n        bookingLoading: false,\n        successfullyCreatedID: action.bookingID,\n        tempBookingID: 0,\n      }\n    case type.CLEAN_TEMP_BOOKING_ID:\n      return {\n        ...state,\n        tempBookingID: 0\n      }\n    ///VALIDATE POSTCODE\n    case type.VALIDATE_BOOKING_REQUEST:\n      return {\n        ...state,\n        bookingValidation: 'validating',\n        bookingValidationError: undefined,\n        delivery: undefined\n      }\n    case type.VALIDATE_BOOKING_SUCCESS:\n      return {\n        ...state,\n        delivery: action.delivery,\n        bookingValidation: 'success'\n      }\n    case type.VALIDATE_BOOKING_FAILURE:\n      return {\n        ...state,\n        bookingValidation: 'error',\n        bookingValidationError: action.error\n      }\n    case type.VALIDATE_POSTCODE_SUCCESS:\n      return {\n        ...state,\n        postcodeSuccess: true\n      }\n    case type.VALIDATE_POSTCODE_REQUEST:\n      return {\n        ...state,\n        postcodeSuccess: false\n      }\n    case type.VALIDATE_POSTCODE_FAILURE:\n      return {\n        ...state,\n        postcodeSuccess: false\n      }\n    ////// GET BOOKING\n    case type.GET_BOOKINGS_SUCCESS:\n      return {\n        ...state,\n        bookings: action.payload.bookings\n      }\n\n    //// CART\n    case type.SET_CART_TYPE:\n      return {\n        ...state,\n        cartType: action.cartType\n      }\n    case type.ADD_CART_ITEM:\n      return {\n        ...state,\n        cart: state.cart.concat(action.data)\n      }\n    case type.REMOVE_CART_ITEM:\n      const removed = [...state.cart.slice(0, action.index), ...state.cart.slice(action.index + 1)];\n      return {\n        ...state,\n        cart: removed\n      }\n    case type.DELETE_BOOKING_INFO:\n      return {\n        ...INITIAL_STATE\n      }\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}