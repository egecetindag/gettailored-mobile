import { ApplePay, ApplePayResult, ConfirmPaymentMethodResult, ConfirmPaymentSheetPaymentResult, ConfirmSetupIntent, ConfirmSetupIntentResult, CreatePaymentMethodResult, CreateTokenForCVCUpdateResult, HandleCardActionResult, InitPaymentSheetResult, PaymentMethodCreateParams, PaymentSheet, PresentPaymentSheetResult, RetrievePaymentIntentResult } from './types';
export declare const createPaymentMethod: (data: PaymentMethodCreateParams.Params, options?: PaymentMethodCreateParams.Options) => Promise<CreatePaymentMethodResult>;
export declare const retrievePaymentIntent: (clientSecret: string) => Promise<RetrievePaymentIntentResult>;
export declare const confirmPaymentMethod: (paymentIntentClientSecret: string, data: PaymentMethodCreateParams.Params, options?: PaymentMethodCreateParams.Options) => Promise<ConfirmPaymentMethodResult>;
export declare const isApplePaySupported: () => Promise<boolean>;
export declare const presentApplePay: (params: ApplePay.PresentParams) => Promise<ApplePayResult>;
export declare const updateApplePaySummaryItems: (summaryItems: ApplePay.CartSummaryItem[]) => Promise<ApplePayResult>;
export declare const confirmApplePayPayment: (clientSecret: string) => Promise<ApplePayResult>;
export declare const handleCardAction: (paymentIntentClientSecret: string) => Promise<HandleCardActionResult>;
export declare const confirmSetupIntent: (paymentIntentClientSecret: string, data: ConfirmSetupIntent.Params, options?: ConfirmSetupIntent.Options) => Promise<ConfirmSetupIntentResult>;
export declare const createTokenForCVCUpdate: (cvc: string) => Promise<CreateTokenForCVCUpdateResult>;
export declare const handleURLCallback: (url: string) => Promise<boolean>;
export declare const initPaymentSheet: (params: PaymentSheet.SetupParams) => Promise<InitPaymentSheetResult>;
export declare const presentPaymentSheet: (params: PaymentSheet.PresentParams) => Promise<PresentPaymentSheetResult>;
export declare const confirmPaymentSheetPayment: () => Promise<ConfirmPaymentSheetPaymentResult>;
