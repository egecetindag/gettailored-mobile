{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as type from \"../actions/types\";\nvar INITIAL_STATE = {\n  pickupClaimLoading: false,\n  deliveryClaimLoading: false,\n  pickupTimeslots: [],\n  deliveryTimeslots: [],\n  pickupClaimed: null,\n  deliveryClaimed: null,\n  claimRequestFailure: '',\n  timeValues: {}\n};\nexport default (function () {\n  var _objectSpread5;\n\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case type.CLEAN_TIME_SLOTS_STATE:\n      return INITIAL_STATE;\n\n    case type.GET_TIMESLOT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, action.name + \"Timeslots\", action.payload.timeslots));\n\n    case type.DELETE_TIMESLOTS:\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, action.name, undefined));\n\n    case type.CLAIM_TIME_SLOTS_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, action.name + 'ClaimLoading', true));\n\n    case type.CLAIM_TIME_SLOTS_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, (_objectSpread5 = {}, _defineProperty(_objectSpread5, action.name + 'ClaimLoading', false), _defineProperty(_objectSpread5, \"claimRequestFailure\", action.errorMsg), _objectSpread5));\n\n    case type.SET_TIME_VALUES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        timeValues: action.data\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/egecetindag/Desktop/Projects/esclot-mobile/reducers/TimeSlotsReducer.js"],"names":["type","INITIAL_STATE","pickupClaimLoading","deliveryClaimLoading","pickupTimeslots","deliveryTimeslots","pickupClaimed","deliveryClaimed","claimRequestFailure","timeValues","state","action","CLEAN_TIME_SLOTS_STATE","GET_TIMESLOT_SUCCESS","name","payload","timeslots","DELETE_TIMESLOTS","undefined","CLAIM_TIME_SLOTS_REQUEST","CLAIM_TIME_SLOTS_FAILURE","errorMsg","SET_TIME_VALUES","data"],"mappings":";;;;;;AACA,OAAO,KAAKA,IAAZ;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,kBAAkB,EAAE,KADA;AAEpBC,EAAAA,oBAAoB,EAAE,KAFF;AAGpBC,EAAAA,eAAe,EAAE,EAHG;AAIpBC,EAAAA,iBAAiB,EAAE,EAJC;AAKpBC,EAAAA,aAAa,EAAE,IALK;AAMpBC,EAAAA,eAAe,EAAE,IANG;AAOpBC,EAAAA,mBAAmB,EAAE,EAPD;AAQpBC,EAAAA,UAAU,EAAE;AARQ,CAAtB;AAWA,gBAAe,YAAmC;AAAA;;AAAA,MAAlCC,KAAkC,uEAA1BT,aAA0B;AAAA,MAAXU,MAAW;;AAChD,UAAQA,MAAM,CAACX,IAAf;AACE,SAAKA,IAAI,CAACY,sBAAV;AACE,aAAOX,aAAP;;AACF,SAAKD,IAAI,CAACa,oBAAV;AACE,6CACKH,KADL,2BAEGC,MAAM,CAACG,IAAP,GAAc,WAFjB,EAE+BH,MAAM,CAACI,OAAP,CAAeC,SAF9C;;AAIF,SAAKhB,IAAI,CAACiB,gBAAV;AACE,6CACKP,KADL,2BAEGC,MAAM,CAACG,IAFV,EAEiBI,SAFjB;;AAKF,SAAKlB,IAAI,CAACmB,wBAAV;AACE,6CACKT,KADL,2BAEGC,MAAM,CAACG,IAAP,GAAc,cAFjB,EAEkC,IAFlC;;AAIF,SAAKd,IAAI,CAACoB,wBAAV;AACE,6CACKV,KADL,6DAEGC,MAAM,CAACG,IAAP,GAAc,cAFjB,EAEkC,KAFlC,0DAGuBH,MAAM,CAACU,QAH9B;;AAKF,SAAKrB,IAAI,CAACsB,eAAV;AACE,6CACKZ,KADL;AAEED,QAAAA,UAAU,EAAEE,MAAM,CAACY;AAFrB;;AAIF;AACE,aAAOb,KAAP;AA/BJ;AAkCD,CAnCD","sourcesContent":["\nimport * as type from '../actions/types';\n\nconst INITIAL_STATE = {\n  pickupClaimLoading: false,\n  deliveryClaimLoading: false,\n  pickupTimeslots: [],\n  deliveryTimeslots: [],\n  pickupClaimed: null,\n  deliveryClaimed: null,\n  claimRequestFailure: '',\n  timeValues: {}\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case type.CLEAN_TIME_SLOTS_STATE:\n      return INITIAL_STATE;\n    case type.GET_TIMESLOT_SUCCESS:\n      return {\n        ...state,\n        [action.name + \"Timeslots\"]: action.payload.timeslots\n      }\n    case type.DELETE_TIMESLOTS:\n      return {\n        ...state,\n        [action.name]: undefined\n      }\n    //// CLAIM\n    case type.CLAIM_TIME_SLOTS_REQUEST:\n      return {\n        ...state,\n        [action.name + 'ClaimLoading']: true\n      }\n    case type.CLAIM_TIME_SLOTS_FAILURE:\n      return {\n        ...state,\n        [action.name + 'ClaimLoading']: false,\n        claimRequestFailure: action.errorMsg\n      }\n    case type.SET_TIME_VALUES:\n      return{\n        ...state,\n        timeValues: action.data\n      }\n    default:\n      return state\n  }\n    \n}"]},"metadata":{},"sourceType":"module"}