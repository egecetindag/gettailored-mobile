{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fetch from 'node-fetch';\n\nfunction timeoutPromise(ms, promise) {\n  return new Promise(function (resolve, reject) {\n    var timeoutId = setTimeout(function () {\n      reject(new Error('promise timeout'));\n    }, ms);\n    promise.then(function (res) {\n      clearTimeout(timeoutId);\n      resolve(res);\n    }, function (err) {\n      clearTimeout(timeoutId);\n      reject(err);\n    });\n  });\n}\n\nvar request = function request(url, options) {\n  return function _callee(dispatch, getState) {\n    var accessToken, req, urlLine, response, responseJson, responseBlob, resp;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            accessToken = getState().auth.accessToken;\n            _context.prev = 1;\n            req = {\n              method: options.method || 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            };\n\n            if (accessToken) {\n              req.headers.Authorization = 'Bearer ' + accessToken;\n            }\n\n            urlLine = \"https://app-dev.gettailored.uk\" + url;\n\n            if (options.method !== 'GET') {\n              req.body = JSON.stringify(options.data);\n            }\n\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(timeoutPromise(45000, fetch(urlLine, req)));\n\n          case 8:\n            response = _context.sent;\n            responseJson = '';\n            responseBlob = '';\n\n            if (!(parseInt(response.status / 100) === 2)) {\n              _context.next = 26;\n              break;\n            }\n\n            if (!options.blob) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 15:\n            responseBlob = _context.sent;\n            return _context.abrupt(\"return\", responseBlob);\n\n          case 17:\n            _context.next = 19;\n            return _regeneratorRuntime.awrap(response.text());\n\n          case 19:\n            resp = _context.sent;\n\n            if (resp) {\n              _context.next = 22;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              success: true,\n              message: ''\n            });\n\n          case 22:\n            responseJson = JSON.parse(resp);\n\n            if (!Array.isArray(responseJson)) {\n              _context.next = 25;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              success: true,\n              data: responseJson\n            });\n\n          case 25:\n            return _context.abrupt(\"return\", _objectSpread({\n              success: true\n            }, responseJson));\n\n          case 26:\n            if (!options.blob) {\n              _context.next = 31;\n              break;\n            }\n\n            _context.next = 29;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 29:\n            responseBlob = _context.sent;\n            return _context.abrupt(\"return\", responseBlob);\n\n          case 31:\n            _context.next = 33;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 33:\n            responseJson = _context.sent;\n            return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, responseJson), {}, {\n              error: responseJson.error || ''\n            }));\n\n          case 37:\n            _context.prev = 37;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", {\n              error: _context.t0.message || \"error\"\n            });\n\n          case 40:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 37]], Promise);\n  };\n};\n\nexport default request;","map":{"version":3,"sources":["/Users/egecetindag/Desktop/Projects/esclot-mobile/network/request.js"],"names":["fetch","timeoutPromise","ms","promise","Promise","resolve","reject","timeoutId","setTimeout","Error","then","res","clearTimeout","err","request","url","options","dispatch","getState","accessToken","auth","req","method","headers","Authorization","urlLine","body","JSON","stringify","data","response","responseJson","responseBlob","parseInt","status","blob","text","resp","success","message","parse","Array","isArray","json","error"],"mappings":"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","sourcesContent":["\nimport fetch from 'node-fetch';\n\nfunction timeoutPromise(ms, promise) {\n\n  return new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      reject(new Error('promise timeout'));\n    }, ms);\n    promise.then(\n      (res) => {\n        clearTimeout(timeoutId);\n        resolve(res);\n      },\n      (err) => {\n        clearTimeout(timeoutId);\n        reject(err);\n      },\n    );\n  });\n}\n\n\n\n const request = (url, options) => {\n  return async (dispatch, getState) => {\n    let accessToken = getState().auth.accessToken;\n    try {\n      const req = {\n        method: options.method || 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n           \n        },\n      };\n      if (accessToken) {\n        req.headers.Authorization = 'Bearer ' + accessToken;\n      }\n\n      // const urlLine = process.env.REACT_APP_BACKEND_URL + url;\n      const urlLine = \"https://app-dev.gettailored.uk\" + url;\n\n      if (options.method !== 'GET') {\n        req.body = JSON.stringify(options.data);\n      }\n      const response = await timeoutPromise(45000, fetch(urlLine, req));\n      let responseJson = '';\n      let responseBlob = '';\n      if (parseInt(response.status / 100) === 2) {\n        if (options.blob) {\n          responseBlob = await response.blob();\n          return responseBlob;\n        }\n     \n       \n        let resp = await response.text();\n        if (!resp) {\n          return {success: true, message: ''}\n        }\n        \n        responseJson = JSON.parse(resp)\n\n\n        if (Array.isArray(responseJson)) {\n          return { success: true, data: responseJson }\n        }\n        return { success: true, ...responseJson };\n      }\n\n      if (options.blob) {\n        responseBlob = await response.blob();\n        return responseBlob;\n      }\n      responseJson = await response.json();\n      return { ...responseJson, error: responseJson.error || '' };\n\n    } catch (e) {\n      return { error: e.message || \"error\" };\n    }\n  }\n};\n\n\n\nexport default request;\n"]},"metadata":{},"sourceType":"module"}