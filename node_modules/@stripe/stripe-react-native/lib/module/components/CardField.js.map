{"version":3,"sources":["CardField.tsx"],"names":["CardFieldNative","CardField","onCardChange","onFocus","cardStyle","placeholder","postalCodeEnabled","props","onCardChangeHandler","event","card","nativeEvent","data","last4","expiryMonth","expiryYear","complete","brand","hasOwnProperty","postalCode","onFocusHandler","focusedField","backgroundColor","borderColor","borderWidth","borderRadius","cursorColor","fontSize","placeholderColor","textColor","textErrorColor","number","expiration","cvc"],"mappings":"wWACA,qDACA,yC,wmCAQA,GAAMA,CAAAA,eAAe,CAAG,wCACtB,WADsB,CAAxB,CAkCO,QAASC,CAAAA,SAAT,MAOG,IANRC,CAAAA,YAMQ,MANRA,YAMQ,CALRC,OAKQ,MALRA,OAKQ,CAJRC,SAIQ,MAJRA,SAIQ,CAHRC,WAGQ,MAHRA,WAGQ,CAFRC,iBAEQ,MAFRA,iBAEQ,CADLC,KACK,sHACR,GAAMC,CAAAA,mBAAmB,CAAG,uBAC1B,SAACC,KAAD,CAAyD,CACvD,GAAMC,CAAAA,IAAI,CAAGD,KAAK,CAACE,WAAnB,CAEA,GAAMC,CAAAA,IAA4B,CAAG,CACnCC,KAAK,CAAEH,IAAI,CAACG,KADuB,CAEnCC,WAAW,CAAEJ,IAAI,CAACI,WAFiB,CAGnCC,UAAU,CAAEL,IAAI,CAACK,UAHkB,CAInCC,QAAQ,CAAEN,IAAI,CAACM,QAJoB,CAKnCC,KAAK,CAAEP,IAAI,CAACO,KALuB,CAArC,CAQA,GAAIP,IAAI,CAACQ,cAAL,CAAoB,YAApB,CAAJ,CAAuC,CACrCN,IAAI,CAACO,UAAL,CAAkBT,IAAI,CAACS,UAAL,EAAmB,EAArC,CACD,CACDjB,YAAY,MAAZ,QAAAA,YAAY,CAAGU,IAAH,CAAZ,CACD,CAhByB,CAiB1B,CAACV,YAAD,CAjB0B,CAA5B,CAoBA,GAAMkB,CAAAA,cAAc,CAAG,uBACrB,SACEX,KADF,CAIK,CACHN,OAAO,MAAP,QAAAA,OAAO,CAAGM,KAAK,CAACE,WAAN,CAAkBU,YAArB,CAAP,CACD,CAPoB,CAQrB,CAAClB,OAAD,CARqB,CAAvB,CAWA,MACE,8BAAC,eAAD,wBACE,YAAY,CAAEK,mBADhB,CAEE,aAAa,CAAEY,cAFjB,CAGE,iBAAiB,CAAEd,iBAAF,OAAEA,iBAAF,CAAuB,IAH1C,CAIE,SAAS,CAAE,CACTgB,eAAe,CAAElB,SAAF,cAAEA,SAAS,CAAEkB,eADnB,CAETC,WAAW,CAAEnB,SAAF,cAAEA,SAAS,CAAEmB,WAFf,CAGTC,WAAW,CAAEpB,SAAF,cAAEA,SAAS,CAAEoB,WAHf,CAITC,YAAY,CAAErB,SAAF,cAAEA,SAAS,CAAEqB,YAJhB,CAKTC,WAAW,CAAEtB,SAAF,cAAEA,SAAS,CAAEsB,WALf,CAMTC,QAAQ,CAAEvB,SAAF,cAAEA,SAAS,CAAEuB,QANZ,CAOTC,gBAAgB,CAAExB,SAAF,cAAEA,SAAS,CAAEwB,gBAPpB,CAQTC,SAAS,CAAEzB,SAAF,cAAEA,SAAS,CAAEyB,SARb,CASTC,cAAc,CAAE1B,SAAF,cAAEA,SAAS,CAAE0B,cATlB,CAJb,CAeE,WAAW,CAAE,CACXC,MAAM,CAAE1B,WAAF,cAAEA,WAAW,CAAE0B,MADV,CAEXC,UAAU,CAAE3B,WAAF,cAAEA,WAAW,CAAE2B,UAFd,CAGXC,GAAG,CAAE5B,WAAF,cAAEA,WAAW,CAAE4B,GAHP,CAIXd,UAAU,CAAEd,WAAF,cAAEA,WAAW,CAAEc,UAJd,CAff,EAqBMZ,KArBN,8EADF,CAyBD","sourcesContent":["import type { CardFieldInput, Nullable } from '../types';\nimport React, { useCallback } from 'react';\nimport {\n  AccessibilityProps,\n  NativeSyntheticEvent,\n  requireNativeComponent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nconst CardFieldNative = requireNativeComponent<CardFieldInput.NativeProps>(\n  'CardField'\n);\n\n/**\n *  Card Field Component Props\n */\nexport interface Props extends AccessibilityProps {\n  style?: StyleProp<ViewStyle>;\n  postalCodeEnabled?: boolean;\n  cardStyle?: CardFieldInput.Styles;\n  placeholder?: CardFieldInput.Placeholders;\n  onCardChange?(card: CardFieldInput.Details): void;\n  onFocus?(focusedField: Nullable<CardFieldInput.Names>): void;\n}\n\n/**\n *  Card Field Component\n *\n * @example\n * ```ts\n * <CardField\n *    postalCodeEnabled={false}\n *    onCardChange={(cardDetails) => {\n *    console.log('card details', cardDetails);\n *      setCard(cardDetails);\n *    }}\n *    style={{height: 50}}\n *  />\n * ```\n * @param __namedParameters Props\n * @returns JSX.Element\n * @category ReactComponents\n */\nexport function CardField({\n  onCardChange,\n  onFocus,\n  cardStyle,\n  placeholder,\n  postalCodeEnabled,\n  ...props\n}: Props) {\n  const onCardChangeHandler = useCallback(\n    (event: NativeSyntheticEvent<CardFieldInput.Details>) => {\n      const card = event.nativeEvent;\n\n      const data: CardFieldInput.Details = {\n        last4: card.last4,\n        expiryMonth: card.expiryMonth,\n        expiryYear: card.expiryYear,\n        complete: card.complete,\n        brand: card.brand,\n      };\n\n      if (card.hasOwnProperty('postalCode')) {\n        data.postalCode = card.postalCode || '';\n      }\n      onCardChange?.(data);\n    },\n    [onCardChange]\n  );\n\n  const onFocusHandler = useCallback(\n    (\n      event: NativeSyntheticEvent<{\n        focusedField: Nullable<CardFieldInput.Names>;\n      }>\n    ) => {\n      onFocus?.(event.nativeEvent.focusedField);\n    },\n    [onFocus]\n  );\n\n  return (\n    <CardFieldNative\n      onCardChange={onCardChangeHandler}\n      onFocusChange={onFocusHandler}\n      postalCodeEnabled={postalCodeEnabled ?? true}\n      cardStyle={{\n        backgroundColor: cardStyle?.backgroundColor,\n        borderColor: cardStyle?.borderColor,\n        borderWidth: cardStyle?.borderWidth,\n        borderRadius: cardStyle?.borderRadius,\n        cursorColor: cardStyle?.cursorColor,\n        fontSize: cardStyle?.fontSize,\n        placeholderColor: cardStyle?.placeholderColor,\n        textColor: cardStyle?.textColor,\n        textErrorColor: cardStyle?.textErrorColor,\n      }}\n      placeholder={{\n        number: placeholder?.number,\n        expiration: placeholder?.expiration,\n        cvc: placeholder?.cvc,\n        postalCode: placeholder?.postalCode,\n      }}\n      {...props}\n    />\n  );\n}\n"]}