{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/egecetindag/Desktop/Projects/esclot-mobile/routes/AddressPage/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport ProfileInfo from \"../../components/Summary/ProfileInfo\";\nimport StepsNavigationFooter from \"../../components/Navigation/Footer\";\nimport { recordBookingInformation, createBooking } from \"../../actions/BookingActions\";\nimport { setErrorMsg } from \"../../actions/GlobalActions\";\nimport { validateBooking } from \"../../actions/BookingActions\";\nimport MobileCartInfo from \"../../components/Summary/MobileCartInfo\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\n\nfunction AddressPage(props) {\n  var _this = this;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      total = _useState2[0],\n      setTotal = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postcodeInterval = _useState4[0],\n      setPostcodeInterval = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      info: state.booking.info,\n      cart: state.booking.cart,\n      cartType: state.booking.cartType,\n      bookingCreationFailedMsg: state.booking.bookingCreationFailedMsg,\n      bookingValidation: state.booking.bookingValidation,\n      bookingLoading: state.booking.bookingLoading,\n      successfullyCreatedID: state.booking.successfullyCreatedID,\n      tempBookingID: state.booking.tempBookingID\n    };\n  }),\n      bookingValidation = _useSelector.bookingValidation,\n      bookingLoading = _useSelector.bookingLoading,\n      cartType = _useSelector.cartType,\n      tempBookingID = _useSelector.tempBookingID,\n      successfullyCreatedID = _useSelector.successfullyCreatedID,\n      info = _useSelector.info,\n      cart = _useSelector.cart;\n\n  var createBookingCB = function createBookingCB() {\n    if (bookingLoading) {\n      return;\n    }\n\n    var req = {\n      name: info.name,\n      address: info.address,\n      postcode: info.postcode,\n      mobile_number: info.mobileNumber,\n      booking_class: cartType,\n      services: cart\n    };\n\n    if (successfullyCreatedID > 0) {\n      req.id = successfullyCreatedID;\n    }\n\n    dispatch(createBooking(req, props.onNext));\n  };\n\n  var onFinish = function onFinish(values) {\n    if (tempBookingID === 0 || tempBookingID === -1) {\n      if (!bookingLoading) {\n        createBookingCB();\n      }\n    }\n  };\n\n  var layout = {\n    labelCol: {\n      span: 24\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  useEffect(function () {\n    if (cart && cart.length < 1) {\n      props.onPrev();\n    }\n  }, []);\n  useEffect(function () {\n    var total = cart.reduce(function (a, _ref) {\n      var cost = _ref.cost;\n      return a + cost;\n    }, 0);\n    setTotal(total);\n  }, [cart]);\n\n  var onChange = function onChange(changed, value, valaues) {\n    console.log(\"changed\", changed, value);\n\n    if (changed === \"postcode\") {\n      if (postcodeInterval !== null) {\n        clearTimeout(postcodeInterval);\n      }\n\n      setPostcodeInterval(setTimeout(function () {\n        dispatch(validateBooking(value, true));\n      }, 2000));\n    }\n\n    var services = [];\n    cart.map(function (item) {\n      return services.push({\n        code: item.code\n      });\n    });\n    dispatch(recordBookingInformation(values));\n  };\n\n  return React.createElement(View, {\n    className: \"service-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }\n  }, React.createElement(ScrollView, {\n    className: \"summary-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, React.createElement(MobileCartInfo, {\n    total: total,\n    cart: cart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    className: \"summary-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, React.createElement(Formik, _extends({\n    onSubmit: onFinish\n  }, layout, {\n    name: \"basic\",\n    initialValues: info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 6\n    }\n  }), function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values;\n    return React.createElement(ProfileInfo, {\n      onChange: onChange,\n      handleChange: handleChange,\n      values: values,\n      handleBlur: handleBlur,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 8\n      }\n    }, React.createElement(StepsNavigationFooter, {\n      title: \"Proceed\",\n      onNext: handleSubmit,\n      onPrev: props.onPrev,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }));\n  }))));\n}\n\nexport default AddressPage;","map":{"version":3,"sources":["/Users/egecetindag/Desktop/Projects/esclot-mobile/routes/AddressPage/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Formik","ProfileInfo","StepsNavigationFooter","recordBookingInformation","createBooking","setErrorMsg","validateBooking","MobileCartInfo","AddressPage","props","total","setTotal","postcodeInterval","setPostcodeInterval","dispatch","state","info","booking","cart","cartType","bookingCreationFailedMsg","bookingValidation","bookingLoading","successfullyCreatedID","tempBookingID","createBookingCB","req","name","address","postcode","mobile_number","mobileNumber","booking_class","services","id","onNext","onFinish","values","layout","labelCol","span","wrapperCol","length","onPrev","reduce","a","cost","onChange","changed","value","valaues","console","log","clearTimeout","setTimeout","map","item","push","code","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\n// import { Form } from 'antd';\n// import '../../assets/styles/service-summary.less';\n// import CartInfo from '../../components/Summary/CartInfo';\nimport ProfileInfo from '../../components/Summary/ProfileInfo';\nimport StepsNavigationFooter from '../../components/Navigation/Footer';\nimport { recordBookingInformation, createBooking } from '../../actions/BookingActions';\nimport { setErrorMsg } from '../../actions/GlobalActions';\nimport { validateBooking } from '../../actions/BookingActions';\nimport MobileCartInfo from '../../components/Summary/MobileCartInfo';\nimport { KeyboardAvoidingView, ScrollView, View } from 'react-native';\nfunction AddressPage(props) {\n\tconst [total, setTotal] = useState(0);\n\tconst [postcodeInterval, setPostcodeInterval] = useState(null);\n\tconst dispatch = useDispatch();\n\t// const [form] = Form.useForm();\n\n\tconst { bookingValidation,\n\t\tbookingLoading,\n\t\tcartType,\n\t\ttempBookingID,\n\t\tsuccessfullyCreatedID, info, cart } = useSelector(state => ({\n\t\t\tinfo: state.booking.info,\n\t\t\tcart: state.booking.cart,\n\t\t\tcartType: state.booking.cartType,\n\t\t\tbookingCreationFailedMsg: state.booking.bookingCreationFailedMsg,\n\t\t\tbookingValidation: state.booking.bookingValidation,\n\t\t\tbookingLoading: state.booking.bookingLoading,\n\t\t\tsuccessfullyCreatedID: state.booking.successfullyCreatedID,\n\t\t\ttempBookingID: state.booking.tempBookingID,\n\t\t}));\n\n\tconst createBookingCB = () => {\n\t\tif (bookingLoading) {\n\t\t\treturn\n\t\t}\n\t\tlet req = {\n\t\t\tname: info.name,\n\t\t\taddress: info.address,\n\t\t\tpostcode: info.postcode,\n\t\t\tmobile_number: info.mobileNumber,\n\t\t\tbooking_class: cartType,\n\t\t\tservices: cart,\n\t\t}\n\t\tif (successfullyCreatedID > 0) {\n\t\t\treq.id = successfullyCreatedID;\n\t\t}\n\t\tdispatch(createBooking(req, props.onNext))\n\t}\n\n\tconst onFinish = (values) => {\n\n\t\tif (tempBookingID === 0 || tempBookingID === -1) {\n\t\t\tif (!bookingLoading) {\n\t\t\t\tcreateBookingCB();\n\t\t\t}\n\t\t}\n\t}\n\n\tconst layout = {\n\t\tlabelCol: { span: 24 },\n\t\twrapperCol: { span: 16 },\n\t};\n\n\tuseEffect(() => {\n\t\tif (cart && cart.length < 1) {\n\t\t\tprops.onPrev();\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tlet total = cart.reduce((a, { cost }) => a + cost, 0);\n\t\tsetTotal(total);\n\t}, [cart])\n\n\tconst onChange = (changed, value, valaues) => {\n\t\tconsole.log(\"changed\", changed, value)\n\t\tif (changed === \"postcode\") {\n\t\t\tif (postcodeInterval !== null) {\n\t\t\t\tclearTimeout(postcodeInterval);\n\t\t\t}\n\t\t\tsetPostcodeInterval(setTimeout(() => {\n\t\t\t\t\n\t\t\t\tdispatch(validateBooking(value, true))\n\t\t\t}, 2000))\n\t\t}\n\t\tlet services = [];\n\t\tcart.map(item => services.push({ code: item.code }));\n\t\tdispatch(recordBookingInformation(values));\n\t}\n\n\treturn (\n\t\t<View className=\"service-summary\">\n\t\t\t<ScrollView \n      className=\"summary-wrapper\">\n\t\t\t\t<View><MobileCartInfo total={total} cart={cart} /></View>\n\t\t\t\t<View className=\"summary-col\">\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tonSubmit={onFinish}\n\t\t\t\t\t\t{...layout}\n\t\t\t\t\t\tname=\"basic\"\n\t\t\t\t\t\tinitialValues={info}\n\t\t\t\t\t\t// validateOnChange={onChange}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t{({ handleChange, handleBlur, handleSubmit, values }) => (\n\t\t\t\t\t\t\t<ProfileInfo onChange={onChange} handleChange={handleChange} values={values} handleBlur={handleBlur} >\n\t\t\t\t\t\t\t\t<StepsNavigationFooter title=\"Proceed\"   onNext={handleSubmit} onPrev={props.onPrev} />\n\t\t\t\t\t\t\t</ProfileInfo>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Formik>\n\t\t\t\t</View>\n\n\t\t\t</ScrollView>\n\n\t\t</View>\n\t);\n}\n\nexport default AddressPage;\n"]},"metadata":{},"sourceType":"module"}