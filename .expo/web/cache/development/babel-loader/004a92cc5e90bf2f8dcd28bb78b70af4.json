{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from \"./reducers\";\nvar loggerMiddleware = createLogger();\n\nvar loadState = function loadState() {\n  try {\n    var serializedState = localStorage.getItem('redux-state');\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nvar saveState = function saveState(state) {\n  try {\n    var serializedState = JSON.stringify({\n      booking: _objectSpread(_objectSpread({}, state.booking), {}, {\n        tempBookingID: 0\n      }),\n      auth: _objectSpread({}, state.auth),\n      service: _objectSpread({}, state.service),\n      timeslots: _objectSpread({}, state.timeslots)\n    });\n    localStorage.setItem('redux-state', serializedState);\n  } catch (_unused) {}\n};\n\nvar persistedState = loadState();\nexport var store = createStore(reducer, persistedState, applyMiddleware(thunkMiddleware));\nstore.subscribe(function () {\n  saveState(store.getState());\n});","map":{"version":3,"sources":["/Users/egecetindag/Desktop/Projects/esclot-mobile/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","createLogger","reducer","loggerMiddleware","loadState","serializedState","localStorage","getItem","undefined","JSON","parse","err","saveState","state","stringify","booking","tempBookingID","auth","service","timeslots","setItem","persistedState","store","subscribe","getState"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAQC,OAAR;AAEA,IAAMC,gBAAgB,GAAGF,YAAY,EAArC;;AAEA,IAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAI;AACF,QAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAxB;;AACA,QAAIF,eAAe,KAAK,IAAxB,EAA8B;AAC5B,aAAOG,SAAP;AACD;;AACD,WAAOC,IAAI,CAACC,KAAL,CAAWL,eAAX,CAAP;AACD,GAND,CAME,OAAOM,GAAP,EAAY;AACZ,WAAOH,SAAP;AACD;AACF,CAVD;;AAYA,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAE3B,MAAI;AACF,QAAMR,eAAe,GAAGI,IAAI,CAACK,SAAL,CAAe;AACvCC,MAAAA,OAAO,kCAAMF,KAAK,CAACE,OAAZ;AAAoBC,QAAAA,aAAa,EAAE;AAAnC,QADgC;AAEvCC,MAAAA,IAAI,oBAAMJ,KAAK,CAACI,IAAZ,CAFmC;AAGvCC,MAAAA,OAAO,oBAAML,KAAK,CAACK,OAAZ,CAHgC;AAIvCC,MAAAA,SAAS,oBAAMN,KAAK,CAACM,SAAZ;AAJ8B,KAAf,CAAxB;AAOAb,IAAAA,YAAY,CAACc,OAAb,CAAqB,aAArB,EAAoCf,eAApC;AACD,GATD,CASE,gBAAM,CAEP;AACF,CAdD;;AAgBA,IAAMgB,cAAc,GAAGjB,SAAS,EAAhC;AAEA,OAAO,IAAMkB,KAAK,GAAGxB,WAAW,CAC5BI,OAD4B,EAE5BmB,cAF4B,EAG5BtB,eAAe,CACXC,eADW,CAHa,CAAzB;AASPsB,KAAK,CAACC,SAAN,CAAgB,YAAM;AACpBX,EAAAA,SAAS,CAACU,KAAK,CAACE,QAAN,EAAD,CAAT;AACD,CAFD","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport  reducer from './reducers';\n\nconst loggerMiddleware = createLogger();\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('redux-state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n}; \n\nconst saveState = (state) => {\n  \n  try {\n    const serializedState = JSON.stringify({\n    booking: {...state.booking,tempBookingID: 0},\n    auth: {...state.auth},\n    service: {...state.service},\n    timeslots: {...state.timeslots},\n  \n  });\n    localStorage.setItem('redux-state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\nconst persistedState = loadState();\n\nexport const store = createStore(\n    reducer,\n    persistedState,\n    applyMiddleware(\n        thunkMiddleware,\n        // loggerMiddleware\n    ),\n);\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});"]},"metadata":{},"sourceType":"module"}