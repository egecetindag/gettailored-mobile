'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Create a `LoginError` by extend of `Error`
 *
 * @param {Number} status Http status
 * @param {String} details Error details
 */

var LoginError = function (_Error) {
  (0, _inherits3.default)(LoginError, _Error);

  function LoginError(status, details) {
    (0, _classCallCheck3.default)(this, LoginError);

    var obj = void 0;
    if (typeof details === 'string') {
      try {
        obj = JSON.parse(details);
      } catch (er) {
        obj = { message: details };
      }
    } else {
      obj = details || { description: 'server error' };
    }

    if (!obj.code) obj.code = obj.error;

    if (obj.code === 'unauthorized') status = 401;

    var message = void 0;
    if (obj.name === 'PasswordStrengthError') {
      message = 'Password is not strong enough.';
    } else {
      message = obj.description || obj.message || obj.error;
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(LoginError).call(this, message));

    _this.message = message;
    _this.status = status;
    _this.name = obj.code;
    _this.code = obj.code;
    _this.details = obj;

    if (status === 0) {
      if (!_this.code || _this.code !== 'offline') {
        _this.code = 'Unknown';
        _this.message = 'Unknown error.';
      }
    }
    return _this;
  }

  return LoginError;
}(Error);

exports.default = LoginError;