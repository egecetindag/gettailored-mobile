{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport request from \"../request\";\nexport var getServicesService = function getServicesService(token) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(dispatch(request('/v1/service', {\n              method: 'GET'\n            }, token)));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var getServiceInputsService = function getServiceInputsService(token) {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(dispatch(request('/v1/service/inputs', {\n              method: 'GET'\n            }, token)));\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var getTimeSlotsService = function getTimeSlotsService(date) {\n  return function _callee3(dispatch) {\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(dispatch(request(\"/v1/time/\" + date, {\n              method: 'GET'\n            })));\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var claimTimeSlotsService = function claimTimeSlotsService(data) {\n  return function _callee4(dispatch) {\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(dispatch(request(\"/v1/time/claim\", {\n              method: 'PUT',\n              data: data\n            })));\n\n          case 2:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/Users/egecetindag/Desktop/Projects/esclot-mobile/network/services/ServiceServices.js"],"names":["request","getServicesService","token","dispatch","method","getServiceInputsService","getTimeSlotsService","date","claimTimeSlotsService","data"],"mappings":";AAAA,OAAOA,OAAP;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAC3C,SAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACUA,QAAQ,CAACH,OAAO,CAAC,aAAD,EAAgB;AACzCI,cAAAA,MAAM,EAAE;AADiC,aAAhB,EAE1BF,KAF0B,CAAR,CADlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAKD,CANM;AAOP,OAAO,IAAMG,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACH,KAAD,EAAW;AAChD,SAAO,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACUA,QAAQ,CAACH,OAAO,CAAC,oBAAD,EAAuB;AAChDI,cAAAA,MAAM,EAAE;AADwC,aAAvB,EAE1BF,KAF0B,CAAR,CADlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAKD,CANM;AAQP,OAAO,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAU;AAC3C,SAAO,kBAAMJ,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACUA,QAAQ,CAACH,OAAO,eAAaO,IAAb,EAAqB;AAC9CH,cAAAA,MAAM,EAAE;AADsC,aAArB,CAAR,CADlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAKD,CANM;AAQP,OAAO,IAAMI,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,IAAD,EAAU;AAC7C,SAAO,kBAAMN,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACUA,QAAQ,CAACH,OAAO,mBAAmB;AAC5CI,cAAAA,MAAM,EAAE,KADoC;AAE5CK,cAAAA,IAAI,EAAEA;AAFsC,aAAnB,CAAR,CADlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAMD,CAPM","sourcesContent":["import request from '../request';\n\nexport const getServicesService = (token) => {\n  return async(dispatch) => {\n      return await dispatch(request('/v1/service', {\n          method: 'GET',\n      }, token))\n  }\n}\nexport const getServiceInputsService = (token) => {\n  return async(dispatch) => {\n      return await dispatch(request('/v1/service/inputs', {\n          method: 'GET',\n      }, token))\n  }\n}\n\nexport const getTimeSlotsService = (date) => {\n  return async(dispatch) => {\n      return await dispatch(request(`/v1/time/${date}`, {\n          method: 'GET',\n      }))\n  }\n}\n\nexport const claimTimeSlotsService = (data) => {\n  return async(dispatch) => {\n      return await dispatch(request(`/v1/time/claim`, {\n          method: 'PUT',\n          data: data\n      }))\n  }\n}"]},"metadata":{},"sourceType":"module"}